[tool.poetry]
name = "delta-engine"
version = "0.1.0"
description = "Domain-driven library for managing data tables and schema evolution."
authors = ["Tomos Corbin <tom_corbin1@hotmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.12"

[tool.poetry.group.dev.dependencies]
pytest = "^8.4.1"
pytest-cov = "^5.0"
ruff = "^0.12.9"
mypy = "^1.17.1"
pyspark = "^4.0.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

# -------------------- Ruff (global) --------------------
[tool.ruff]
target-version = "py312"
line-length = 100
extend-exclude = [".venv", ".tox", "dist", "build", ".mypy_cache", ".ruff_cache"]
fix = true
unsafe-fixes = false

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
docstring-code-format = true

[tool.ruff.lint]
# E,F: pyflakes/pycodestyle; N: pep8-naming; I: isort; UP: pyupgrade; B: bugbear; RUF: extras; TID: tidy-imports
select = ["E", "W", "F", "N", "I", "UP", "B", "RUF", "TID", "D"]
ignore = [
  "E203",  # slice spacing (compatible with ruff-format/black)
  "E266",  # allow long inline comments
  "D104",  # don't require package docstrings in __init__.py
  "D107",  # don't require docstrings on __init__ methods
  "D212",  # don't require multi-line docstring summary to start at the first line
]

# isort behavior for import sorting
[tool.ruff.lint.isort]
known-first-party = ["delta_engine"]
force-sort-within-sections = true
combine-as-imports = true

# Tidy imports
[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"  # enforce absolute imports (TID252)

# Test file exceptions (short fixture names etc.)
[tool.ruff.lint.per-file-ignores]
"tests/**" = ["N802", "N803", "N806"]

[tool.pytest.ini_options]
testpaths = ["tests"]
addopts = """
--cov
--cov-report=term-missing:skip-covered
--cov-report=xml:reports/coverage.xml
"""

[tool.coverage.report]
fail_under = 85
show_missing = true

[tool.coverage.run]
branch = true
source = ["delta_engine"]